2+2
library(tidymodels)
library(tidyverse)
library(lubridate)
library(httr)
library(jsonlite)
library(tidymodels)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("lubridate")
install.packages("httr")
install.packages("tidyverse")
library(tidyverse)
library(lubridate)
library(httr)
library(jsonlite)
library(tidymodels)
r_insp <- GET("https://opendata.arcgis.com/datasets/ebe3ae7f76954fad81411612d7c4fb17_1.geojson")
inspections <- content(r_insp, "text") %>%
fromJSON() %>%
.$features %>%
.$properties %>%
as_tibble()
inspections_clean <- inspections %>%
mutate(date = ymd_hms(DATE_) %>% as.Date()) %>%
select(-c(DATE_, DESCRIPTION, OBJECTID))
restauraunts <- content(r_rest, "text") %>%
fromJSON() %>%
.$features %>%
.$properties %>%
as_tibble() %>%
select(-OBJECTID)
restauraunts <- restauraunts %>%
mutate(RESTAURANTOPENDATE = ymd_hms(RESTAURANTOPENDATE) %>% as.Date())
r_rest <- GET("https://opendata.arcgis.com/datasets/124c2187da8c41c59bde04fa67eb2872_0.geojson") #json
restauraunts <- content(r_rest, "text") %>%
fromJSON() %>%
.$features %>%
.$properties %>%
as_tibble() %>%
select(-OBJECTID)
restauraunts <- restauraunts %>%
mutate(RESTAURANTOPENDATE = ymd_hms(RESTAURANTOPENDATE) %>% as.Date())
inspections_restaurants <- inspections_clean %>%
left_join(restauraunts, by = c("HSISID", "PERMITID")) %>%
filter(SCORE > 50, FACILITYTYPE == "Restaurant") %>%
distinct(HSISID, date, .keep_all = TRUE) %>%
select(-c(FACILITYTYPE, PERMITID)) %>%
select(-c(NAME, contains("ADDRESS"), CITY, STATE, POSTALCODE, PHONENUMBER, X, Y, GEOCODESTATUS))
inspections_restaurants %>%
glimpse()
data_time_feats <- inspections_restaurants %>%
arrange(date) %>%
mutate(SCORE_yr_overall = slider::slide_index_dbl(SCORE,
.i = date,
.f = mean,
na.rm = TRUE,
.before = lubridate::days(365),
.after = -lubridate::days(1))
) %>%
group_by(HSISID) %>%
mutate(SCORE_lag = lag(SCORE),
SCORE_recent = slider::slide_index_dbl(SCORE,
date,
mean,
na.rm = TRUE,
.before = lubridate::days(365*3),
.after = -lubridate::days(1),
.complete = FALSE),
days_since_open = (date - RESTAURANTOPENDATE) / ddays(1),
days_since_last = (date - lag(date)) / ddays(1)) %>%
ungroup() %>%
arrange(date)
library(slider)
install.packages("slider")
library(slider)
library(slider)
data_time_feats <- inspections_restaurants %>%
arrange(date) %>%
mutate(SCORE_yr_overall = slider::slide_index_dbl(SCORE,
.i = date,
.f = mean,
na.rm = TRUE,
.before = lubridate::days(365),
.after = -lubridate::days(1))
) %>%
group_by(HSISID) %>%
mutate(SCORE_lag = lag(SCORE),
SCORE_recent = slider::slide_index_dbl(SCORE,
date,
mean,
na.rm = TRUE,
.before = lubridate::days(365*3),
.after = -lubridate::days(1),
.complete = FALSE),
days_since_open = (date - RESTAURANTOPENDATE) / ddays(1),
days_since_last = (date - lag(date)) / ddays(1)) %>%
ungroup() %>%
arrange(date)
data_time_feats
install.packages("tm")
library(shiny); runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/application')
runApp('Downloads/YMseekA-overnight-visualization-feature-Sai-31009751 4/Iteration-1/Visualization/Dashboard/1.5')
runApp('Downloads/YMseekA-overnight-visualization-feature-Sai-31009751 4/Iteration-1/Visualization/Dashboard/1.5')
install.packages("conflicted")
runApp('Downloads/YMseekA-overnight-visualization-feature-Sai-31009751 4/Iteration-1/Visualization/Dashboard/1.5')
runApp('Downloads/YMseekA-overnight-visualization-feature-Sai-31009751 4/Iteration-1/Visualization/Dashboard/1.5')
options(encoding = "UTF-8")
runApp('Downloads/YMseekA-overnight-visualization-feature-Sai-31009751 4/Iteration-1/Visualization/Dashboard/1.5')
options(encoding = "UTF-8")
deployApp()
options(encoding = "UTF-8")
deployApp
deployApp()
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/application')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
runApp('Downloads/visualisation project/data/Visual1.R')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
library(shiny); runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
runApp('Documents/GitHub/YMseekA/Iteration-1/Visualization/Drugs_mental_health/drug_mh_shiny_app.R')
setwd('/Users/uditarora/Documents/GitHub/YMseekA/Iteration-1/Visualization/MentalHealthServices')
####3
community_mental_health = read.xlsx("Community-mental-health-care-tables-2018-19.xlsx", sheetName = "Table CMHC.28", startRow = 5, endRow = 139, header = TRUE ,as.data.frame = TRUE)
library(xlsx)
library(dplyr)
####3
community_mental_health = read.xlsx("Community-mental-health-care-tables-2018-19.xlsx", sheetName = "Table CMHC.28", startRow = 5, endRow = 139, header = TRUE ,as.data.frame = TRUE)
community_mental_health
write.xlsx(community_mental_health, "community_service_centers.xlsx")
####4 Table CMHC.2: Community mental health care service contacts, patients and treatment days, states and territories, 2005–06 to 2018–19
treatment_days = read.xlsx("Community-mental-health-care-tables-2018-19.xlsx", sheetName = "Table CMHC.2", startRow = 5, endRow = 85, header = TRUE ,as.data.frame = TRUE)
treatment_days
avg_treatment_days_state = treatment_days[which(grepl("Average treatment", treatment_days$Measure)), ]
avg_treatment_days_state
avg_treatment_days_state = treatment_days[which(grepl("treatment", treatment_days$Measure)), ]
avg_treatment_days_state
colnames(avg_treatment_days_state)
avg_treatment_days_state_sel_years = avg_treatment_days_state_sel_years[,c('State.Territory', 'X2013.142.4', 'X2014.15', 'X2015.166', 'X2016.176.7', 'X2017.18', 'X2018.19')]
avg_treatment_days_state_sel_years = avg_treatment_days_state[,c('State.Territory', 'X2013.142.4', 'X2014.15', 'X2015.166', 'X2016.176.7', 'X2017.18', 'X2018.19')]
avg_treatment_days_state_sel_years
names(avg_treatment_days_state_sel_years) <- c('State', '2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19')
avg_treatment_days_state_sel_years
avg_treatment_days_state_sel_years[14, 'State'] = "New South Wales"
avg_treatment_days_state_sel_years[23, 'State'] = "Victoria"
avg_treatment_days_state_sel_years[32, 'State'] = "Queensland"
avg_treatment_days_state_sel_years[50, 'State'] = "South Australia"
avg_treatment_days_state_sel_years[59, 'State'] = "Tasmania"
avg_treatment_days_state_sel_years
treatment_days = read.xlsx("Community-mental-health-care-tables-2018-19.xlsx", sheetName = "Table CMHC.2", startRow = 5, endRow = 85, header = TRUE ,as.data.frame = TRUE)
avg_treatment_days_state = treatment_days[which(grepl("treatment", treatment_days$Measure)), ]
colnames(avg_treatment_days_state)
avg_treatment_days_state_sel_years = avg_treatment_days_state[,c('State.Territory', 'X2013.142.4', 'X2014.15', 'X2015.166', 'X2016.176.7', 'X2017.18', 'X2018.19')]
names(avg_treatment_days_state_sel_years) <- c('State', '2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19')
avg_treatment_days_state_sel_years
avg_treatment_days_state_sel_years[1,'State']
avg_treatment_days_state_sel_years[2, 'State'] = "New South Wales"
avg_treatment_days_state_sel_years[3, 'State'] = "Victoria"
avg_treatment_days_state_sel_years[4, 'State'] = "Queensland"
avg_treatment_days_state_sel_years[6, 'State'] = "South Australia"
avg_treatment_days_state_sel_years[7, 'State'] = "Tasmania"
avg_treatment_days_state_sel_years
write.xlsx(avg_treatment_days_state_sel_years, "state_wise_treatment_days.xlsx")
performance = read.xlsx("Mental-health-service-key-performance-indicators-tables.xlsx", sheetName = "Table KPI.1", startRow = 5, endRow = 868, header = TRUE ,as.data.frame = TRUE)
performance
performance_agegroup = performance[which(grepl("All", performance$Age.group)), ]
performance_agegroup
performance_count = performance_agegroup[which(grepl("Per", performance_agegroup$Count))]
performance_agegroup
performance_count = performance_agegroup[which(grepl("Per", performance_agegroup$Count))]
performance_count = performance_agegroup[which(grepl("Per", performance_agegroup$Count)), ]
performance_count
names(performance_count) <- c('State', 'Consumer Group', 'Age Group', 'Outcome', 'Count', '2007-08', '2008-09','2009-10','2010-11','2011-12','2012-13','2013-14','2014-15','2015-16','2016-17','2017-18','2018-19', 'Average_annual_change')
performance_count
write.xlsx(performance_count, "mental_services_outcome.xlsx")
